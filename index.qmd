# Learning Objectives for this Book

This is a book that is meant to bring you (a budding bioinformaticist) beyond the foundational shell scripting skills learned from a shell scripting course such as [the one from the Carpentries](https://swcarpentry.github.io/shell-novice/). Specifically, it shows you a path to get started with reproducible cloud computing on the DNAnexus platform. 

Our goal is to showcase the "glue" skills that help you do bioinformatics reproducibly. That includes:

- **Articulate** basic Cloud Computing concepts
- **Leverage** bash scripting and the dx-toolkit to execute jobs on the DNAnexus platform
- **Execute** batch processing of multiple files in a project on the DNAnexus platform
- **Build** and **Execute** applets on the DNAnexus platform by specifying JSON files
- **Implement** Portable Workflows using Workflow Description Language (WDL) to do the following:
    - Run on a single file
    - Batch process multiple files
    - Utilize multiple steps in a workflow
- **Utilize** `sed` and `awk` and other command line utilities to process files using regular expressions
- **Manage** software dependencies reproducibly using container-based technologies such as Docker
- **Utilize** Environment Variables in a reproducible way
- **Monitor**, **profile**, and **retry** jobs to optimize costs

## What is not covered

- Running and monitoring jobs on a HPC Cluster
- Running a workflow using Cromwell/MiniWDL

This book is not meant to be a substitute for excellent books such as [Data Science on the Command Line](). This book focuses on the essential shell skills (notably Bash) that will help you on the DNAnexus platform.

## Notes

This is a very opinionated journey through shell scripting, workflow languages, and reproduciblity. It is designed to build on each of the concepts in a gradual manner. 

At each step, you'll be able to do useful things with your data. We will focus on skills and programming patterns that are useful. 

## Prerequisites

Before you tackle this book, you should be able to accomplish the following:

- **Utilize** and **navigate** File Paths (both absolute and relative) in a Unix system
- **Articulate** the value of environment variables in shell scripting

We recommend reviewing a course such as the [Software Carpentry course for Shell Scripting](https://swcarpentry.github.io/shell-novice/) before getting started with this book.

## Setup DNAnexus Account and dx-toolkit

First, create an account at <https://platform.dnanexus.com>. You'll need your login and password to interact with the platform.

We'll be running all of these scripts on our own machine. We'll be using the command-line for most of these.

If you are on Linux/Mac, you'll be working with the terminal. 

If you are on Windows, I recommend you install Windows Subsystem for Linux, and specifically Ubuntu. That will give you a command-line shell that you can use to interact with the DNAnexus platform.

```
sudo apt-get install python3
sudo apt-get install pip3
pip3 install dxpy
```

That last command will install the `dx-toolkit` to your machine, which are the command line tools you'll need to work on the DNAnexus cloud.

## Alternative Setup: mybinder

If you aren't able to install the dx-toolkit to your machine, you can use this mybinder link to try out the commands. Binder opens a preinstalled image with a shell that has `dxpy` preinstalled on one of the <https://mybinder.org> servers. 

<https://mybinder.org/v2/gh/laderast/minimal_dxpy/HEAD?urlpath=lab>

Just keep in mind that this shell is ephemeral - it will disappear. So make sure that any files you create that you want to save are either uploaded back to your project with `dx upload` or you've downloaded them using the file explorer.

## Try logging in

Now that you have an account and a way to run the `dx-toolkit`, try logging in with `dx login`:

```
dx login
```

The platform will then ask you for your username and password. Enter them. 

If you are successful, you will see either the select screen or, if you only have one project, that project will be selected for you.

## Create your project

Let's create a project on the platform:

```
dx new project -y my_project 
```

